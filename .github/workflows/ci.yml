name: Go CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.22

      - name: Install dependencies
        run: |
          go mod tidy
          go mod download
        env:
          GO111MODULE: "on"

      - name: Build
        run: |
          export CGO_ENABLED=0 GOOS=linux GOARCH=amd64 GO111MODULE=on
          make build

      - name: Run tests
        run: go test -v ./...

  docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build --build-arg DB_HOST=${{ secrets.DB_HOST }} \
                       --build-arg DB_USER=${{ secrets.DB_USER }} \
                       --build-arg DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
                       --build-arg DB_NAME=${{ secrets.DB_NAME }} \
                       --build-arg DB_PORT=${{ secrets.DB_PORT }} \
                       --build-arg DB_SSLMODE=${{ secrets.DB_SSLMODE }} \
                       --build-arg SERVICE_A_API_KEY=${{ secrets.SERVICE_A_API_KEY }} \
                       -t 3rd-party-gateway:1.0.0 .

      - name: Tag Docker image
        run: docker tag 3rd-party-gateway:1.0.0 ${{ secrets.DOCKER_USERNAME }}/3rd-party-gateway:1.0.0

      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/3rd-party-gateway:1.0.0

  deploy:
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH to server and deploy
        uses: appleboy/ssh-action@v0.1.3
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          script: |
            cd /root/infract_backend/3rd-party-gateway/deploy
            docker compose down
            docker compose pull
            docker compose up -d